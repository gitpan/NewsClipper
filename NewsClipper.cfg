# use perl                                  -*- mode: Perl; -*-

# This is the configuration file for News Clipper. Feel free to modify any of
# the values here.

# The timezone. You only have to set this for Windows or DOS platforms
$ENV{TZ} = '' if ($^O eq 'MSWin32') || ($^O eq 'dos');

%config = (

# This value lets News Clipper know if the configuration file is incompatible.
'forNewsClipperVersion' => 1.21,

# Enter your email here. It's used during the registration process.
'email' => 'YOUR_EMAIL_HERE',

# Enter your registration code here.
'regKey' => 'YOUR_REG_KEY_HERE',

# inputFiles is a list of quoted, comma-separated input files.
# outputFiles is a list of quoted, comma-separated output files.
# Each input file is transformed by News Clipper into the corresponding output
# file. (i.e. There should be one input file for each output file.)
'inputFiles' => [
  'sample.txt',
# 'NEXT INPUT FILE',
],
'outputFiles' => [
  'output.html',
# 'NEXT OUTPUT FILE',
],

# ftpFiles allows you to ftp your output files to your web server. Make sure
# there is one set of data for each output file.  The first set applies to the
# first output file, the second set to the second output file, etc. If you
# don't want to FTP a file, just use {} for the information.
'ftpFiles' => [
  {},
#  {'server'   => 'SERVER',
#   'username' => 'USER NAME',
#   'password' => 'PASSWORD',
#   'dir'      => 'DEST DIR'},
],

# You can specify one or more directories where News Clipper can find
# handlers.  Note that installed handlers automatically go into the first
# directory.  Specify the directories separated using commas, and quote them.
'handlerlocations' => ["$home/.NewsClipper"],

# This value is set for single user installation, so that News Clipper will be
# able to find it's supporting modules. Not needed for compiled versions.
'modulepath' => '',

# News Clipper uses a cache to store acquired HTML, which the handlers use
# during times between update times. maxcachesize is in megabytes, and should
# be at least 5.
# !!! News Clipper will not work without this cache, since handlers only
# update the acquired data at certain times. !!!
'cachelocation' => "$home/.NewsClipper/cache",
'maxcachesize' => 15,

# $scripttimeout is the length of time, in seconds, to allow News Clipper to
# run.
'scriptTimeout' => 60*10,

# $socketTimeout is the length of time, in seconds, to allow any particular web
# service to respond.
'socketTimeout' => 30,

# socketTries is the number of times to try to get information from a remote
# server for each handler, before giving up.
'socketTries' => 2,

# Set $proxy if you use a proxy. For example, "http://proxy.host.com:8080/"
'proxy' => "",

# If you need to supply a username/password to your proxy server, you can
# specify it here.
#
# If you supply a password of '', you will be prompted for a password *if*
# News Clipper is run interactively. If not, the password will default to "",
# which, is almost certainly not what you want.  So, this feature is not very
# useful if you're using this program from "cron".
#
# If you supply a real password here, this password will be used.  If you use
# this option, please make sure that you take appropiate measures to make sure
# that this file can't be read by others.
'proxy_username' => '',
'proxy_password' => '',

# Automatically download any bugfix handlers. (Checks every few hours.)
'auto_download_bugfix_updates' => 'yes',

);

# -----------------------------------------------------------------------------

%NewsClipper::Handler::Filter::cacheimages::handlerconfig = (

# The next three values are used by the cacheimages filter. They are here to
# allow system administrators to set a global image cache for all users.
# maximgcacheage is in days.
'imgcachedir' => "$home/public_html/NewsClipper/imagecache",
'imgcacheurl' => "http://servername/NewsClipper/imagecache",
'maximgcacheage' => 7,

);

# -----------------------------------------------------------------------------

1;
